@page
@model HaCongHieuRazorPages.Pages.AccountManagement.IndexModel

@{
    ViewData["Title"] = "Index";
}
@functions {
    public string GetRoleName(int? role)
    {
        return role switch
        {
            1 => "Staff",
            2 => "Lecturer",
            _ => "Unknown"
        };
    }
}

<h1>Index</h1>

<p>
    <a asp-page="Create">Create New</a>
</p>
<form method="get">
    <div class="form-row align-items-center">
        <div class="col-auto">
            <label for="searchInput">Search</label>
        </div>
        <div class="col-auto">
            <input type="text" class="form-control mb-2" id="searchInput" name="searchInput" placeholder="Enter search term" value="@Model.SearchInput">
        </div>
        <div class="col-auto">
            <select class="form-control mb-2" id="searchAccount" name="searchAccount">
                <option value="AccountId" selected="@(Model.IsSelected("AccountId"))">Account ID</option>
                <option value="AccountName" selected="@(Model.IsSelected("AccountName"))">Account Name</option>
                <option value="AccountEmail" selected="@(Model.IsSelected("AccountEmail"))">Account Email</option>
                <option value="AccountRole" selected="@(Model.IsSelected("AccountRole"))">Account Role</option>
            </select>
        </div>
        <div class="col-auto">
            <button type="submit" class="btn btn-primary mb-2">Search</button>
        </div>
    </div>
</form>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.SystemAccount[0].AccountId)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.SystemAccount[0].AccountName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.SystemAccount[0].AccountEmail)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.SystemAccount[0].AccountRole)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.SystemAccount[0].AccountPassword)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model.SystemAccount) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.AccountId)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.AccountName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.AccountEmail)
            </td>
            <td>
                @* @Html.DisplayFor(modelItem => item.AccountRole) *@
                    @GetRoleName(item.AccountRole)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.AccountPassword)
            </td>
            <td>
                <a asp-page="./Edit" asp-route-id="@item.AccountId">Edit</a> |
                <a asp-page="./Details" asp-route-id="@item.AccountId">Details</a> |
                <a asp-page="./Delete" asp-route-id="@item.AccountId">Delete</a>
            </td>
        </tr>
}
    </tbody>
</table>
<nav aria-label="Page navigation">
    <ul class="pagination">
        <li class="page-item @(Model.CurrentPage == 1 ? "disabled" : "")">
            <a class="page-link" asp-page="Index" asp-route-currentPage=@(Model.CurrentPage - 1)>Previous</a>
        </li>

        @for (int i = 1; i <= Model.TotalPages; i++)
        {
            <li class="page-item @(Model.CurrentPage == i ? "active" : "")">
                <a class="page-link" asp-page="Index" asp-route-currentPage="@i">@i</a>
            </li>
        }

        <li class="page-item @(Model.CurrentPage == Model.TotalPages ? "disabled" : "")">
            <a class="page-link" asp-page="Index" asp-route-currentPage=@(Model.CurrentPage + 1)>Next</a>
        </li>
    </ul>
</nav>